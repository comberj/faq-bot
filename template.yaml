AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sean-bot

  Sample SAM Template for sean-bot
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Handler: app.lambdaHandler
    Runtime: nodejs12.x
    Environment:
      Variables:
        REGION: !Ref region
        DB_HOST: !Ref dbHost
        DB_NAME: !Ref dbName
        DB_USER: !Ref dbUser
        DB_PASSWORD: !Ref dbPassword
        HISTORY_QUEUE_URL: !Ref HistoryQueue
        SLACK_WORKSPACE: !Ref slackWorkspace
        SLACK_TOKEN: !Ref slackToken
        SLACK_BOT_USER_ID: !Ref slackBotUserID
    Timeout: 30
    
Parameters:
  region:
    Type: String
  dbHost:
    Type: String
  dbName:
    Type: String
  dbUser:
    Type: String
  dbPassword:
    Type: String
  slackToken:
    Type: String
  slackWorkspace:
    Type: String
  slackBotUserID:
    Type: String

Resources:
  ProcessMessage:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: methods/process-message/
      Policies:
        - ComprehendBasicAccessPolicy: {}
        - SQSSendMessagePolicy: 
            QueueName: !GetAtt HistoryQueue.QueueName
      Events:
        ProcessMessage:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /process
            Method: post
  ProcessHistory:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: methods/process-history/
      Policies:
        - ComprehendBasicAccessPolicy: {}
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt HistoryQueue.Arn
            BatchSize: 10
  HistoryQueue:
    Type: AWS::SQS::Queue

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ProcessMessageApi:
    Description: "API Gateway endpoint URL for Prod stage for Process Message function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/process/"
  ProcessMessage:
    Description: "Process Message Lambda Function ARN"
    Value: !GetAtt ProcessMessage.Arn
  ProcessMessageIamRole:
    Description: "Implicit IAM Role created for Process Message function"
    Value: !GetAtt ProcessMessageRole.Arn